---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
        <link rel="icon" href="/favicon.ico" type="image/x-icon">        
        <meta name="viewport" content="width=device-width, initial-scale=1" /> 
        <meta name="generator" content={Astro.generator} />
        <BaseHead title={title + " | " + SITE_TITLE} description={SITE_DESCRIPTION} />
		<title>{title}</title>
	</head>
	<body>
        <Header />
        <h1 id="page-title" class="text-gray-200 py-10 pl-5 lg:pt-20 lg:pl-0">{title}</h1>
        <div class="text-gray-400">
            <slot />
        </div>
        <Footer />
	</body>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            await animateText(document.getElementById('page-title'), 125);
        });

        function generateRandomCharacter() {
    		const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-_=+';
    		return characters.charAt(Math.floor(Math.random() * characters.length));
      	}

    	function animateText(element, duration) {
    	    return new Promise<void>(resolve => {
    			const originalText = element.textContent;
        		const length = originalText.length;
        		let counter = 0;
        		const interval = setInterval(() => {
    	      		let newText = '';
    	      		for (let i = 0; i < length; i++) {
    	        		if (i <= counter) {
    	          			newText += originalText.charAt(i);
    	        		} else {
    	          			newText += generateRandomCharacter();
    	        		}
    	      		}
    	      	
    				element.textContent = newText;
    		      	counter++;
    		      	if (counter > length) {
    		        	clearInterval(interval);
    		        	element.textContent = originalText;
    		      	}
    	    	}, duration);

    	        setTimeout(() => {
    	            resolve();
    	        }, duration * 10);
    	    });
    	}
    </script>
</html>